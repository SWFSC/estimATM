---
title: "Survey Scheduler"
editor: visual
format:
  html:
    toc: true
    html-math-method: katex
    embed-resources: true

execute: 
  echo: false
  warning: false
  error: false
---

```{r setup}
# Install and load pacman (library management package)
if (!require("pacman")) install.packages("pacman")

# Install and load required packages from CRAN ---------------------------------
pacman::p_load(tidyverse,lubridate,here,mapview,gt,janitor)

# Install and load required packages from Github -------------------------------
# atm
pacman::p_load_gh("kstierhoff/atm")
# surveyR
pacman::p_load_gh("kstierhoff/surveyR")

# Get project name from directory
prj.name <- last(unlist(str_split(here(), "/")))

# Get all settings files
settings.files <- dir(here("Doc/settings"))

# Source survey settings file
prj.settings <- settings.files[str_detect(settings.files, paste0("settings_", prj.name, ".R"))]

source(here("Doc/settings", prj.settings))
```

For now, this is a quick utility to summarize sea days and leg midpoints based on published ship schedules, specified in the settings file for a given project, in this case: `r prj.settings`.

```{r estimate-sea-days}
# Survey dates
leg.end <- leg.ends[seq(2, length(leg.ends),2)]
leg.start <- leg.ends[seq(1, length(leg.ends)-1,2)]

# Leg durations
leg.duration <- as.numeric(difftime(leg.end, leg.start) + 1)

# Leg midpoint
leg.mid <- leg.start + leg.duration/2

survey.plan <- data.frame(leg = seq_along(leg.start), leg.start, leg.mid, 
                          leg.end, leg.duration) %>% 
    adorn_totals() 

gt(survey.plan)
```

Total planned days at sea (DAS) is `r sum(leg.duration)`.

```{r calculate-sea-days}
if(file.exists(here::here("Data/Nav/nav_data.Rdata"))){
  load(here::here("Data/Nav/nav_data.Rdata"))
  
  # Break nav by leg dates
  nav <- nav %>% 
    mutate(leg = cut(as.numeric(date(time)), leg.breaks, 
                   include.lowest = TRUE, labels = FALSE))
  # Summarize nav data by leg
  nav.summ <- nav %>% 
    group_by(leg) %>% 
    summarise(
      sea.days = n_distinct(date(time))
    )
  
  survey.progress <- data.frame(leg = seq_along(leg.start), leg.start, 
                                leg.mid, leg.end, leg.duration) %>% 
    left_join(nav.summ) %>% 
    adorn_totals()
  
  # Combine with leg table
  gt(survey.progress)
  
} else {
  cat("No nav data to process")
}
```

To date, we have executed `r sum(nav.summ$sea.days)` DAS, or `r round(sum(nav.summ$sea.days)/sum(leg.duration), 1)*100`% of the `r sum(leg.duration)` total DAS allocated.
